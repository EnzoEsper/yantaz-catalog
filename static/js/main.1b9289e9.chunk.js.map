{"version":3,"sources":["components/SwipeableTextMobileStepper/SwipeableTextMobileStepper.tsx","components/SimpleDialog/SimpleDialog.tsx","assets/images/Recurso 1.svg","components/Copyright/Copyright.tsx","components/Album/Album.tsx","App.tsx","index.tsx"],"names":["AutoPlaySwipeableViews","autoPlay","SwipeableViews","SwipeableTextMobileStepper","props","albumHash","useState","images","setImages","theme","useTheme","React","activeStep","setActiveStep","maxSteps","length","useEffect","getAlbumImages","a","axios","get","headers","Authorization","response","data","console","log","Box","sx","maxWidth","flexGrow","axis","direction","index","onChangeIndex","step","enableMouseEvents","map","image","Math","abs","component","height","display","overflow","width","src","link","alt","description","id","MobileStepper","steps","position","nextButton","Button","size","onClick","prevActiveStep","disabled","backButton","SimpleDialog","onClose","open","Dialog","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","getGenreFromDescription","split","trim","getSizesFromDescription","createTheme","Album","setOpen","selectedAlbumHash","setSelectedAlbumHash","ThemeProvider","CssBaseline","AppBar","Toolbar","style","justifyContent","logo","Container","py","Grid","container","spacing","item","xs","sm","md","Card","flexDirection","CardMedia","CardContent","gutterBottom","Chip","label","marginRight","marginTop","CardActions","getAlbumHashFromDescription","bgcolor","p","App","ReactDOM","render","document","getElementById"],"mappings":"8cAaMA,EAAyBC,mBAASC,KAsHzBC,MAhHf,SAAoCC,GAClC,IAAQC,EAAcD,EAAdC,UACR,EAA4BC,mBAAgB,IAA5C,mBAAOC,EAAP,KAAeC,EAAf,KACMC,EAAQC,cACd,EAAoCC,IAAML,SAAS,GAAnD,mBAAOM,EAAP,KAAmBC,EAAnB,KACMC,EAAWP,EAAOQ,OAkCxB,OAhCAC,qBAAU,WACR,IAAMC,EAAc,uCAAG,4BAAAC,EAAA,+EAEIC,IAAMC,IAAN,wCACYf,EADZ,WAErB,CACEgB,QAAS,CACPC,cAAe,+BANF,OAEbC,EAFa,OAUnBf,EAAUe,EAASC,KAAKA,MAVL,gDAYnBC,QAAQC,IAAR,MAZmB,yDAAH,qDAgBpBT,MACC,IAeD,eAACU,EAAA,EAAD,CAAKC,GAAI,CAAEC,SAAU,IAAKC,SAAU,GAApC,UAcE,cAAC9B,EAAD,CACE+B,KAA0B,QAApBtB,EAAMuB,UAAsB,YAAc,IAChDC,MAAOrB,EACPsB,cAtBmB,SAACC,GACxBtB,EAAcsB,IAsBVC,mBAAiB,EAJnB,SAMG7B,EAAO8B,KAAI,SAACC,EAAOL,GAAR,OACV,8BACGM,KAAKC,IAAI5B,EAAaqB,IAAU,EAC/B,cAACN,EAAA,EAAD,CACEc,UAAU,MACVb,GAAI,CACFc,OAAQ,IACRC,QAAS,QACTd,SAAU,IACVe,SAAU,SACVC,MAAO,QAETC,IAAKR,EAAMS,KACXC,IAAKV,EAAMW,cAEX,MAdIX,EAAMY,SAkBpB,cAACC,EAAA,EAAD,CACEC,MAAOtC,EACPuC,SAAS,SACTzC,WAAYA,EACZ0C,WACE,eAACC,EAAA,EAAD,CACEC,KAAK,QACLC,QA3DS,WACjB5C,GAAc,SAAC6C,GAAD,OAAoBA,EAAiB,MA2D3CC,SAAU/C,IAAeE,EAAW,EAHtC,sBAMuB,QAApBL,EAAMuB,UACL,cAAC,IAAD,IAEA,cAAC,IAAD,OAIN4B,WACE,eAACL,EAAA,EAAD,CAAQC,KAAK,QAAQC,QAnEV,WACjB5C,GAAc,SAAC6C,GAAD,OAAoBA,EAAiB,MAkEHC,SAAyB,IAAf/C,EAApD,UACuB,QAApBH,EAAMuB,UACL,cAAC,IAAD,IAEA,cAAC,IAAD,IAJJ,oBCjFK6B,EAfM,SAACzD,GACpB,IAAQ0D,EAA6B1D,EAA7B0D,QAASC,EAAoB3D,EAApB2D,KAAM1D,EAAcD,EAAdC,UAMvB,OACE,cAAC2D,EAAA,EAAD,CAAQF,QALU,WAClBA,KAI8BC,KAAMA,EAApC,SAEE,cAAC,EAAD,CAA4B1D,UAAWA,OC/B9B,MAA0B,sC,SCe1B4D,EAZG,WAChB,OACE,eAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,iBAAiBC,MAAM,SAAzD,UACG,kBACD,cAACC,EAAA,EAAD,CAAMF,MAAM,UAAUG,KAAK,mBAA3B,6BAEQ,KACP,IAAIC,MAAOC,cALd,QC2BEC,EAA0B,SAACzB,GAI/B,OAHaA,EAAY0B,MAAM,KACV,GAAGC,QAKpBC,EAA0B,SAAC5B,GAI/B,OAHaA,EAAY0B,MAAM,KACV,GAAGC,OAAOD,MAAM,MAYjClE,EAAQqE,cAoLCC,EAjLD,WACZ,MAA4BzE,mBAAgB,IAA5C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAwBF,oBAAS,GAAjC,mBAAOyD,EAAP,KAAaiB,EAAb,KACA,EAAkD1E,mBAAS,IAA3D,mBAAO2E,EAAP,KAA0BC,EAA1B,KAkCA,OApBAlE,qBAAU,WACR,IAAMC,EAAc,uCAAG,4BAAAC,EAAA,+EAEIC,IAAMC,IAAN,+CAErB,CACEC,QAAS,CACPC,cAAe,+BANF,OAEbC,EAFa,OAUnBf,EAAUe,EAASC,KAAKA,MAVL,gDAYnBC,QAAQC,IAAR,MAZmB,yDAAH,qDAgBpBT,MACC,IAGD,eAACkE,EAAA,EAAD,CAAe1E,MAAOA,EAAtB,UACE,cAAC2E,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAQhC,SAAS,WAAjB,SACE,cAACiC,EAAA,EAAD,CAASC,MAAO,CAAEC,eAAgB,UAAlC,SACE,qBAAK1C,IAAK2C,EAAMzC,IAAI,UAAUuC,MAAO,CAAE7C,OAAQ,eAGnD,+BAwCE,eAACgD,EAAA,EAAD,CAAW9D,GAAI,CAAE+D,GAAI,GAAK9D,SAAS,KAAnC,UAEE,cAAC+D,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACGvF,EAAO8B,KAAI,SAACC,GAAD,OACV,cAACsD,EAAA,EAAD,CAAMG,MAAI,EAAgBC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA7C,SACE,eAACC,EAAA,EAAD,CACEvE,GAAI,CACFc,OAAQ,OACRC,QAAS,OACTyD,cAAe,UAJnB,UAOE,cAACC,EAAA,EAAD,CACE5D,UAAU,MACVb,GACE,GAKFU,MAAOA,EAAMS,KACbC,IAAI,WAEN,eAACsD,EAAA,EAAD,CAAa1E,GAAI,CAAEE,SAAU,GAA7B,UACE,cAACoC,EAAA,EAAD,CAAYqC,cAAY,EAACpC,QAAQ,KAAK1B,UAAU,KAAhD,UA5IaQ,EA6IcX,EAAMW,YA5ItCA,EAAY0B,MAAM,KACV,GAAGC,UA8IJ,cAAC4B,EAAA,EAAD,CACEC,MAAO/B,EAAwBpC,EAAMW,aACrCkB,QAAQ,WACRX,KAAK,QACL+B,MAAO,CAAEmB,YAAa,QAASC,UAAW,WAG7C9B,EAAwBvC,EAAMW,aAAaZ,KAAI,SAACmB,GAAD,OAC9C,cAACgD,EAAA,EAAD,CAEEC,MAAOjD,EACPA,KAAK,QACL+B,MAAO,CAAEmB,YAAa,QAASC,UAAW,UAHrCnD,SAWX,cAACoD,EAAA,EAAD,CAAarB,MAAO,CAAEC,eAAgB,UAAtC,SACE,cAACjC,EAAA,EAAD,CACEC,KAAK,QACLC,QAAS,WA3HG,IAACpD,IAvBC,SAAC4C,GAInC,OAHaA,EAAY0B,MAAM,KACX,GAAGC,OAkJCiC,CAA4BvE,EAAMW,aA5HxDiC,EAAqB7E,GARrB2E,GAAQ,IAgIQ,2BA7CU1C,EAAMY,IAxHJ,IAACD,OAqLvB,cAAC,EAAD,CACE5C,UAAW4E,EACXlB,KAAMA,EACND,QAhJU,WAClBkB,GAAQ,WAoJN,cAACrD,EAAA,EAAD,CAAKC,GAAI,CAAEkF,QAAS,mBAAoBC,EAAG,GAAKtE,UAAU,SAA1D,SAYE,cAAC,EAAD,UC1NO,SAASuE,IACtB,OAAO,cAAC,EAAD,I,OCHTC,IAASC,OACP,eAAC,WAAD,WAEE,cAAC9B,EAAA,EAAD,IACA,cAAC4B,EAAD,OAEFG,SAASC,eAAe,W","file":"static/js/main.1b9289e9.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport Box from \"@mui/material/Box\";\r\nimport MobileStepper from \"@mui/material/MobileStepper\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Button from \"@mui/material/Button\";\r\nimport KeyboardArrowLeft from \"@mui/icons-material/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@mui/icons-material/KeyboardArrowRight\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport { autoPlay } from \"react-swipeable-views-utils\";\r\nimport axios from \"axios\";\r\n\r\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\r\n\r\nexport interface SwipeableTextMobileStepperProps {\r\n  albumHash: string;\r\n}\r\n\r\nfunction SwipeableTextMobileStepper(props: SwipeableTextMobileStepperProps) {\r\n  const { albumHash } = props;\r\n  const [images, setImages] = useState<any[]>([]);\r\n  const theme = useTheme();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const maxSteps = images.length;\r\n\r\n  useEffect(() => {\r\n    const getAlbumImages = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `https://api.imgur.com/3/album/${albumHash}/images`,\r\n          {\r\n            headers: {\r\n              Authorization: \"Client-ID 0ddd9bb0bc00518\",\r\n            },\r\n          }\r\n        );\r\n        setImages(response.data.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    getAlbumImages();\r\n  }, []);\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleStepChange = (step: number) => {\r\n    setActiveStep(step);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: 400, flexGrow: 1 }}>\r\n      {/* <Paper\r\n        square\r\n        elevation={0}\r\n        sx={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          height: 50,\r\n          pl: 2,\r\n          bgcolor: \"background.default\",\r\n        }}\r\n      >\r\n        <Typography>{images[activeStep].description}</Typography>\r\n      </Paper> */}\r\n      <AutoPlaySwipeableViews\r\n        axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n        index={activeStep}\r\n        onChangeIndex={handleStepChange}\r\n        enableMouseEvents\r\n      >\r\n        {images.map((image, index) => (\r\n          <div key={image.id}>\r\n            {Math.abs(activeStep - index) <= 2 ? (\r\n              <Box\r\n                component=\"img\"\r\n                sx={{\r\n                  height: 400,\r\n                  display: \"block\",\r\n                  maxWidth: 400,\r\n                  overflow: \"hidden\",\r\n                  width: \"100%\",\r\n                }}\r\n                src={image.link}\r\n                alt={image.description}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        ))}\r\n      </AutoPlaySwipeableViews>\r\n      <MobileStepper\r\n        steps={maxSteps}\r\n        position=\"static\"\r\n        activeStep={activeStep}\r\n        nextButton={\r\n          <Button\r\n            size=\"small\"\r\n            onClick={handleNext}\r\n            disabled={activeStep === maxSteps - 1}\r\n          >\r\n            SIGUIENTE\r\n            {theme.direction === \"rtl\" ? (\r\n              <KeyboardArrowLeft />\r\n            ) : (\r\n              <KeyboardArrowRight />\r\n            )}\r\n          </Button>\r\n        }\r\n        backButton={\r\n          <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\r\n            {theme.direction === \"rtl\" ? (\r\n              <KeyboardArrowRight />\r\n            ) : (\r\n              <KeyboardArrowLeft />\r\n            )}\r\n            ANTERIOR\r\n          </Button>\r\n        }\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default SwipeableTextMobileStepper;\r\n","import * as React from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport PersonIcon from \"@mui/icons-material/Person\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { blue } from \"@mui/material/colors\";\r\nimport SwipeableTextMobileStepper from \"../SwipeableTextMobileStepper/SwipeableTextMobileStepper\";\r\n\r\nexport interface SimpleDialogProps {\r\n  albumHash: string;\r\n  open: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nconst SimpleDialog = (props: SimpleDialogProps) => {\r\n  const { onClose, open, albumHash } = props;\r\n\r\n  const handleClose = () => {\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} open={open}>\r\n      {/* <DialogTitle>Set backup account</DialogTitle> */}\r\n      <SwipeableTextMobileStepper albumHash={albumHash} />\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SimpleDialog;\r\n","export default __webpack_public_path__ + \"static/media/Recurso 1.d04b29e9.svg\";","import { Link } from \"@mui/material\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nconst Copyright = () => {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"https://mui.com/\">\r\n        Yantaz Catalogo\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}.\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default Copyright;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CameraIcon from \"@mui/icons-material/PhotoCamera\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Link from \"@mui/material/Link\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport axios from \"axios\";\r\nimport { Chip } from \"@mui/material\";\r\nimport SimpleDialog from \"../SimpleDialog/SimpleDialog\";\r\nimport logo from \"../../assets/images/Recurso 1.svg\";\r\nimport Copyright from \"../Copyright/Copyright\";\r\n\r\nconst emails = [\"username@gmail.com\", \"user02@gmail.com\"];\r\n\r\nconst getModelFromDescription = (description: string) => {\r\n  let arDesc = description.split(\"-\");\r\n  const model = arDesc[0].trim();\r\n\r\n  return model;\r\n};\r\n\r\nconst getGenreFromDescription = (description: string) => {\r\n  let arDesc = description.split(\"-\");\r\n  const genre = arDesc[1].trim();\r\n\r\n  return genre;\r\n};\r\n\r\nconst getSizesFromDescription = (description: string) => {\r\n  let arDesc = description.split(\"-\");\r\n  const sizes = arDesc[2].trim().split(\" \");\r\n\r\n  return sizes;\r\n};\r\n\r\nconst getAlbumHashFromDescription = (description: string) => {\r\n  let arDesc = description.split(\"-\");\r\n  const hash = arDesc[3].trim();\r\n\r\n  return hash;\r\n};\r\n\r\nconst theme = createTheme();\r\n\r\n// MAIN COMPONENT\r\nconst Album = () => {\r\n  const [images, setImages] = useState<any[]>([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedAlbumHash, setSelectedAlbumHash] = useState(\"\");\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSelectedAlbumHash = (albumHash: string) => {\r\n    setSelectedAlbumHash(albumHash);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getAlbumImages = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `https://api.imgur.com/3/album/JP4IPq2/images`,\r\n          {\r\n            headers: {\r\n              Authorization: \"Client-ID 0ddd9bb0bc00518\",\r\n            },\r\n          }\r\n        );\r\n        setImages(response.data.data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    getAlbumImages();\r\n  }, []);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <AppBar position=\"relative\">\r\n        <Toolbar style={{ justifyContent: \"center\" }}>\r\n          <img src={logo} alt=\"sneaker\" style={{ height: \"2.5em\" }} />\r\n        </Toolbar>\r\n      </AppBar>\r\n      <main>\r\n        {/* Hero unit */}\r\n        {/* <Box\r\n          sx={{\r\n            bgcolor: \"background.paper\",\r\n            pt: 8,\r\n            pb: 6,\r\n          }}\r\n        >\r\n          <Container maxWidth=\"sm\">\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h2\"\r\n              align=\"center\"\r\n              color=\"text.primary\"\r\n              gutterBottom\r\n            >\r\n              Album layout\r\n            </Typography>\r\n            <Typography\r\n              variant=\"h5\"\r\n              align=\"center\"\r\n              color=\"text.secondary\"\r\n              paragraph\r\n            >\r\n              Something short and leading about the collection below—its\r\n              contents, the creator, etc. Make it short and sweet, but not too\r\n              short so folks don&apos;t simply skip over it entirely.\r\n            </Typography>\r\n            <Stack\r\n              sx={{ pt: 4 }}\r\n              direction=\"row\"\r\n              spacing={2}\r\n              justifyContent=\"center\"\r\n            >\r\n              <Button variant=\"contained\">Main call to action</Button>\r\n              <Button variant=\"outlined\">Secondary action</Button>\r\n            </Stack>\r\n          </Container>\r\n        </Box> */}\r\n        <Container sx={{ py: 8 }} maxWidth=\"md\">\r\n          {/* End hero unit */}\r\n          <Grid container spacing={4}>\r\n            {images.map((image: any) => (\r\n              <Grid item key={image.id} xs={12} sm={6} md={4}>\r\n                <Card\r\n                  sx={{\r\n                    height: \"100%\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                  }}\r\n                >\r\n                  <CardMedia\r\n                    component=\"img\"\r\n                    sx={\r\n                      {\r\n                        // 16:9\r\n                        // pt: '56.25%',\r\n                      }\r\n                    }\r\n                    image={image.link}\r\n                    alt=\"random\"\r\n                  />\r\n                  <CardContent sx={{ flexGrow: 1 }}>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                      {getModelFromDescription(image.description)}\r\n                    </Typography>\r\n                    {\r\n                      <Chip\r\n                        label={getGenreFromDescription(image.description)}\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        style={{ marginRight: \"0.3em\", marginTop: \"0.2em\" }}\r\n                      />\r\n                    }\r\n                    {getSizesFromDescription(image.description).map((size) => (\r\n                      <Chip\r\n                        key={size}\r\n                        label={size}\r\n                        size=\"small\"\r\n                        style={{ marginRight: \"0.3em\", marginTop: \"0.2em\" }}\r\n                      />\r\n                    ))}\r\n                    {/* <Typography>\r\n                      This is a media card. You can use this section to describe\r\n                      the content.\r\n                    </Typography> */}\r\n                  </CardContent>\r\n                  <CardActions style={{ justifyContent: \"center\" }}>\r\n                    <Button\r\n                      size=\"small\"\r\n                      onClick={() => {\r\n                        handleSelectedAlbumHash(\r\n                          getAlbumHashFromDescription(image.description)\r\n                        );\r\n                        handleClickOpen();\r\n                      }}\r\n                    >\r\n                      VER MAS\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n          <SimpleDialog\r\n            albumHash={selectedAlbumHash}\r\n            open={open}\r\n            onClose={handleClose}\r\n          />\r\n        </Container>\r\n      </main>\r\n      {/* Footer */}\r\n      <Box sx={{ bgcolor: \"background.paper\", p: 6 }} component=\"footer\">\r\n        {/* <Typography variant=\"h6\" align=\"center\" gutterBottom>\r\n          Footer\r\n        </Typography>\r\n        <Typography\r\n          variant=\"subtitle1\"\r\n          align=\"center\"\r\n          color=\"text.secondary\"\r\n          component=\"p\"\r\n        >\r\n          Something here to give the footer a purpose!\r\n        </Typography> */}\r\n        <Copyright />\r\n      </Box>\r\n      {/* End footer */}\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Album;\r\n","import * as React from \"react\";\nimport Container from \"@mui/material/Container\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport Link from \"@mui/material/Link\";\nimport ProTip from \"./ProTip\";\nimport Album from \"./components/Album/Album\";\n\nexport default function App() {\n  return <Album />;\n}\n","import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.Fragment>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </React.Fragment>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}